const axios = require('axios');

async function testDuplicateUsage() {
    try {
        console.log('üß™ TESTE: Uso Duplo de C√≥digo de Presente\n');

        const baseURL = 'http://localhost:3000';

        // 0. Primeiro, tentar cadastrar usu√°rio de teste
        console.log('0Ô∏è‚É£ Criando usu√°rio de teste...');
        try {
            await axios.post(`${baseURL}/api/user/register`, {
                name: 'Usu√°rio Teste',
                email: 'teste@exemplo.com',
                password: '123456'
            });
            console.log('‚úÖ Usu√°rio criado com sucesso!');
        } catch (error) {
            if (error.response?.data?.error?.includes('j√° existe')) {
                console.log('‚ÑπÔ∏è Usu√°rio j√° existe, continuando...');
            } else {
                console.log(`‚ùå Erro ao criar usu√°rio: ${error.response?.data?.error || error.message}`);
            }
        }

        // 1. Fazer login
        console.log('\n1Ô∏è‚É£ Fazendo login...');
        const loginResponse = await axios.post(`${baseURL}/api/user/login`, {
            email: 'teste@exemplo.com',
            password: '123456'
        });

        const token = loginResponse.data.token;
        console.log(`‚úÖ Login realizado! Token: ${token.substring(0, 20)}...`);

        // 2. Primeira tentativa de usar o c√≥digo
        console.log('\n2Ô∏è‚É£ Primeira tentativa de usar TESTE123...');
        try {
            const firstUse = await axios.post(`${baseURL}/api/gift-code/apply`,
                { code: 'TESTE123' },
                { headers: { Authorization: `Bearer ${token}` } }
            );
            console.log(`‚úÖ Primeira vez: ${firstUse.data.message}`);
            console.log(`üí∞ Cr√©ditos ap√≥s primeira uso: ${firstUse.data.credits}`);
        } catch (error) {
            console.log(`‚ùå Erro na primeira tentativa: ${error.response?.data?.error || error.message}`);
        }

        // 3. Segunda tentativa (deve falhar)
        console.log('\n3Ô∏è‚É£ Segunda tentativa com mesmo c√≥digo...');
        try {
            const secondUse = await axios.post(`${baseURL}/api/gift-code/apply`,
                { code: 'TESTE123' },
                { headers: { Authorization: `Bearer ${token}` } }
            );
            console.log(`‚ùå PROBLEMA: Segunda tentativa deveria ter falhado mas foi aceita!`);
            console.log(`üí∞ Cr√©ditos: ${secondUse.data.credits}`);
        } catch (error) {
            console.log(`‚úÖ Segunda tentativa rejeitada corretamente: ${error.response?.data?.error}`);
        }

        // 4. Tentar outro c√≥digo para confirmar que ainda funciona
        console.log('\n4Ô∏è‚É£ Testando outro c√≥digo (RHSUPER2025)...');
        try {
            const otherCode = await axios.post(`${baseURL}/api/gift-code/apply`,
                { code: 'RHSUPER2025' },
                { headers: { Authorization: `Bearer ${token}` } }
            );
            console.log(`‚úÖ Outro c√≥digo funcionou: ${otherCode.data.message}`);
            console.log(`üí∞ Cr√©ditos finais: ${otherCode.data.credits}`);
        } catch (error) {
            console.log(`‚ùå Erro com outro c√≥digo: ${error.response?.data?.error || error.message}`);
        }

    } catch (error) {
        console.error('‚ùå Erro no teste:', error.response?.data || error.message);
    }
}

// Executar teste
testDuplicateUsage(); 