// Script para verificar status de c√≥digo de sorteio
// Usage: node check-sorteio-status.js CODIGO

const sequelize = require('./db');
const GiftCode = require('./models/giftCode');
const GiftCodeUsage = require('./models/giftCodeUsage');
const User = require('./models/user');

async function checkSorteioStatus(codigo) {
    try {
        if (!codigo) {
            console.log('‚ùå Uso: node check-sorteio-status.js CODIGO');
            process.exit(1);
        }

        // Sincronizar banco de dados
        await sequelize.sync();

        console.log('üîç Verificando status do c√≥digo:', codigo);
        console.log('='.repeat(50));

        // Buscar o c√≥digo
        const giftCode = await GiftCode.findOne({
            where: { code: codigo },
            include: [
                {
                    model: GiftCodeUsage,
                    as: 'usages',
                    include: [
                        {
                            model: User,
                            attributes: ['id', 'name', 'email', 'createdAt']
                        }
                    ]
                }
            ]
        });

        if (!giftCode) {
            console.log('‚ùå C√ìDIGO N√ÉO ENCONTRADO:', codigo);
            console.log('   Verifique se o c√≥digo foi criado corretamente no sistema.');
            process.exit(1);
        }

        console.log('üìã INFORMA√á√ïES DO C√ìDIGO:');
        console.log(`   C√≥digo: ${giftCode.code}`);
        console.log(`   Descri√ß√£o: ${giftCode.description || 'Sem descri√ß√£o'}`);
        console.log(`   Status: ${giftCode.isActive ? 'üü¢ Ativo' : 'üî¥ Inativo'}`);
        console.log(`   Usos realizados: ${giftCode.usedCount}`);
        console.log(`   M√°ximo de usos: ${giftCode.maxUses}`);
        console.log(`   Expira em: ${giftCode.expiresAt || '‚ôæÔ∏è Nunca'}`);
        console.log(`   Criado em: ${giftCode.createdAt}`);
        console.log('');

        // Status do sorteio
        const isAvailable = giftCode.isActive &&
            giftCode.usedCount < giftCode.maxUses &&
            (!giftCode.expiresAt || new Date() <= giftCode.expiresAt);

        console.log('üé≤ STATUS DO SORTEIO:');
        if (isAvailable) {
            console.log('   üéÅ DISPON√çVEL - C√≥digo ainda pode ser usado!');
            console.log(`   ‚è≥ Restam ${giftCode.maxUses - giftCode.usedCount} uso(s)`);
        } else {
            if (giftCode.usedCount >= giftCode.maxUses) {
                console.log('   ‚úÖ SORTEIO FINALIZADO - C√≥digo foi usado!');
            } else if (!giftCode.isActive) {
                console.log('   ‚è∏Ô∏è INATIVO - C√≥digo foi desativado');
            } else if (giftCode.expiresAt && new Date() > giftCode.expiresAt) {
                console.log('   ‚è∞ EXPIRADO - C√≥digo passou da validade');
            }
        }
        console.log('');

        // Hist√≥rico de uso
        if (giftCode.usages && giftCode.usages.length > 0) {
            console.log('üèÜ GANHADOR(ES) DO SORTEIO:');
            giftCode.usages.forEach((usage, index) => {
                console.log(`   ${index + 1}. ${usage.User.name} (${usage.User.email})`);
                console.log(`      üìÖ Usado em: ${usage.usedAt}`);
                console.log(`      üë§ Cadastrado em: ${usage.User.createdAt}`);
                console.log('');
            });
        } else {
            console.log('üìù HIST√ìRICO:');
            console.log('   Nenhum uso registrado ainda.');
            console.log('');
        }

        // URLs para compartilhamento
        console.log('üîó LINKS PARA COMPARTILHAMENTO:');
        console.log(`   Produ√ß√£o: https://cvsemfrescura.com.br/analisar?giftCode=${codigo}`);
        console.log(`   Local: http://localhost:3000/analisar?giftCode=${codigo}`);
        console.log('');

        // Estat√≠sticas
        const totalCodes = await GiftCode.count();
        const totalUsages = await GiftCodeUsage.count();

        console.log('üìä ESTAT√çSTICAS GERAIS:');
        console.log(`   Total de c√≥digos criados: ${totalCodes}`);
        console.log(`   Total de usos registrados: ${totalUsages}`);

        process.exit(0);

    } catch (error) {
        console.error('‚ùå Erro ao verificar c√≥digo:', error);
        process.exit(1);
    }
}

// Pegar c√≥digo dos argumentos da linha de comando
const codigo = process.argv[2];
checkSorteioStatus(codigo); 